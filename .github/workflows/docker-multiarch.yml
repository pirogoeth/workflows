---

on:
  workflow_call:
    inputs:
      output-registry: 
        description: "The registry to push the image to"
        type: string
        default: ghcr.io
      output-repository-path:
        description: "The path to the repository to push the image to"
        type: string
        required: true
      dockerfile-path:
        description: "The path of the Dockerfile to build"
        type: string
        required: true
      build-context:
        description: "The build context to use"
        type: string
        default: .
      ssh-known-hosts:
        description: "The known_hosts to include"
        type: string
        default: |
          # github.com:22 SSH-2.0-babeld-42a36784
          github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
          # github.com:22 SSH-2.0-babeld-42a36784
          github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
          # github.com:22 SSH-2.0-babeld-42a36784
          github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
      enable-ssh-key-action:
        description: "Enable the SSH key action, allowing use of the SSH key in the build context"
        type: boolean
        default: false
      image-build-args:
        description: "Build arguments to pass to Docker image build"
        type: string
        default: |
          GOOS=linux
          GOARCH=amd64
      image-build-platforms:
        description: "Build platforms to pass to Docker image build"
        type: string
        default: 'linux/amd64'
      image-tag:
        description: |
          Simple tag name/version to use for the resulting manifest
        type: string
        required: false
    secrets:
      ssh-key:
        description: "The SSH key to use. If provided, will be available in the build context."
        required: false

jobs:
  platform-matrix:
    runs-on: ubuntu-latest

    outputs:
      platforms: "${{ steps.platforms.outputs.platforms }}"

    steps:
    - name: Define platforms
      id: platforms
      run: |
        platforms=$(xargs -I{} echo '"{}"' <<< "${{ inputs.image-build-platforms }}" | jq -sc)
        echo "platforms=${platforms}" >> $GITHUB_OUTPUT

  build-vars:
    runs-on: ubuntu-latest

    outputs:
      dockerfile-hash: "${{ steps.generate.outputs.dockerfile-hash }}"
      image-repository: "${{ steps.generate.outputs.image-repository }}"

    steps:
    - uses: actions/checkout@v4
    - id: generate
      run: |
        echo 'dockerfile-hash="${{ hashFiles(inputs.dockerfile-path) }}' >> $GITHUB_OUTPUT
        echo 'image-repository="${{ inputs.output-registry }}/${{ inputs.output-repository-path }}"' >> $GITHUB_OUTPUT

  image:
    runs-on: ubuntu-latest

    needs:
    - platform-matrix
    - build-vars

    strategy:
      fail-fast: false
      matrix:
        platform: "${{ fromJSON(needs.platform-matrix.outputs.platforms) }}"

    steps:
    - uses: actions/checkout@v4

    - uses: shimataro/ssh-key-action@v2
      if: "inputs.enable-ssh-key-action"
      with:
        key: ${{ secrets.ssh-key }}
        known_hosts: ${{ inputs.ssh-known-hosts }}
        if_key_exists: replace

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Slugify build platform pair
      run: |
        platform=${{ matrix.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Build image with artifacts
      id: build
      uses: docker/build-push-action@v6
      with:
        context: "${{ inputs.build-context }}"
        file: "${{ inputs.dockerfile-path }}"
        push: true
        build-args: "${{ inputs.image-build-args }}"
        platforms: "${{ matrix.platform }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
        ssh: "${{ inputs.enable-ssh-key-action && 'default=/home/runner/.ssh/id_rsa' || null }}"
        outputs: |
          type=image,name=${{ needs.build-vars.outputs.image-repository }},push-by-digest=true,name-canonical=true,push=true

    - name: Export image digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ needs.build-vars.outputs.dockerfile-hash }}-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  build-multiarch-manifest:
    runs-on: ubuntu-latest
    needs:
    - build-vars
    - image

    steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: /tmp/digests
        pattern: digests-${{ needs.build-vars.outputs.dockerfile-hash }}-*
        merge-multiple: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (pull request)
      id: meta_pr
      uses: docker/metadata-action@v5
      if: "!(github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')"
      with:
        images: ${{ needs.build-vars.outputs.image-repository }}
        tags: |
          type=ref,event=pr,prefix=PR

    - name: Extract metadata (tags)
      id: meta_tags
      uses: docker/metadata-action@v5
      if: "startsWith(github.ref, 'refs/tags/')"
      with:
        images: ${{ needs.build-vars.outputs.image-repository }}
        tags: |
          type=ref,event=tag

    - name: Extract metadata (mainline)
      id: meta_mainline
      uses: docker/metadata-action@v5
      if: "github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'"
      with:
        images: ${{ needs.build-vars.outputs.image-repository }}
        tags: |
          type=raw,value=latest
          type=sha,prefix={{branch}}-,format=short
          type=raw,value=${{ inputs.image-tag }}

    - name: Create manifest and push
      working-directory: /tmp/digests
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "${DOCKER_METADATA_OUTPUT_JSON}") \
          $(printf '${{ needs.build-vars.outputs.image-repository }}@sha256:%s ' *)

    - name: Inspect resulting manifest
      run: |
        docker buildx imagetools inspect ${{ needs.build-vars.outputs.image-repository }}:${{ steps.meta_pr.outputs.tags || steps.meta_tags.outputs.tags || steps.meta_mainline.outputs.tags }}